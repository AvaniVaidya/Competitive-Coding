{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
Given a string s, find the length of the longest \
substring\
\'a0without repeating characters.\
\'a0\
\'a0\
\'a0\
Example 1:\
\'a0\
Input: s = "abcabcbb"\
Output: 3\
Explanation: The answer is "abc", with the length of 3.\
Example 2:\
\'a0\
Input: s = "bbbbb"\
Output: 1\
Explanation: The answer is "b", with the length of 1.\
Example 3:\
\'a0\
Input: s = "pwwkew"\
Output: 3\
Explanation: The answer is "wke", with the length of 3.\
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.\
\'a0\
\'a0\
Constraints:\
\'a0\
0 <= s.length <= 5 * 104\
s consists of English letters, digits, symbols and spaces.\
\
============================================================\
\
class Solution \{\
\'a0\'a0\'a0 public int lengthOfLongestSubstring(String s) \{\
\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 String curr = "";\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 int maxLength = 0;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 char currC;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 int index = -1;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 for(int i = 0; i < s.length(); i++)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 currC = s.charAt(i);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 index = curr.indexOf(currC);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if(index != -1)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 maxLength = Math.max(maxLength, curr.length());\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 curr = curr.substring(index+1);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 curr += currC;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 return Math.max(maxLength, curr.length());\
\'a0\'a0\'a0 \}\
\}\
}